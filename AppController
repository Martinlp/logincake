<?php
/**
 * Application level Controller
 *
 * This file is application-wide controller file. You can put all
 * application-wide controller-related methods here.
 *
 * PHP 5
 *
 * CakePHP(tm) : Rapid Development Framework (http://cakephp.org)
 * Copyright 2005-2012, Cake Software Foundation, Inc. (http://cakefoundation.org)
 *
 * Licensed under The MIT License
 * Redistributions of files must retain the above copyright notice.
 *
 * @copyright     Copyright 2005-2012, Cake Software Foundation, Inc. (http://cakefoundation.org)
 * @link          http://cakephp.org CakePHP(tm) Project
 * @package       app.Controller
 * @since         CakePHP(tm) v 0.2.9
 * @license       MIT License (http://www.opensource.org/licenses/mit-license.php)
 */

App::uses('Controller', 'Controller');

/**
 * Application Controller
 *
 * Add your application-wide methods in the class below, your controllers
 * will inherit them.
 *
 * @package       app.Controller
 * @link http://book.cakephp.org/2.0/en/controllers.html#the-app-controller
 */
class AppController extends Controller {

function inicializarAuth(){

$this->Auth->loginError = ‘El nombre de usuario y/o la contraseña no son correctos. Por favor, inténtalo otra vez’;
$this->Auth->authError = ‘Para entrar en la zona privada tienes que autenticarte’;

$this->Session->write('Auth.redirect', null);
} // fin de function inicializarAuth

public $components = array(
'Session',
'Auth' => array(
'loginRedirect' => array(‘controller’ => 'clasificados', 'action' => 'index'),
'logoutRedirect' => array('controller' => 'clasificados', 'action' => 'index'),
'authorize' => array('Controller') // Added this line
)
);

public function beforeFilter()
{
$permissions = array('index', 'registro','login');  // array con métodos públicos
parent::beforeFilter();
if ( $this->Auth->user() ):              // True si el usuario está logeado
array_push($permissions, 'publicar', 'borrar','modificar');  // estos métodos sólo para usuarios logeados
$this->inicializarAuth();
endif;
$this->Auth->allow($permissions);  // coloco permisos
$this->inicializarAuth();
}

public function isAuthorized()
{
if (isset( $this->params[Configure::read('Routing.admin')] )): // si estoy en la zona admin
if ( $this->Auth->user('role') == ‘admin’ ):  // si soy un usuario logeado y del grupo admin
return true; // Welcome!
endif;
endif;

return false; // go away !!
}    
    
    
}
